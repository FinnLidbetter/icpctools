{
	"swagger": "2.0",
	"info": {
		"version": "1.0.0",			
		"title": "",
		"description": "CDS Swagger",
		"termsOfService": "",
		"contact":{
		   "name": "Tim deBoer",
		   "email": "tim@tdeboer.ca",
		   "url": ""
		},
		"license":{
		  "name":"",
		  "url":""
		}
	},
	"tags": [{
		   "name": "images",
		   "description": "CDS Image API"
		},
		{
		   "name": "video",
		   "description": "CDS Video API"
		},
		{
		   "name": "other",
		   "description": "CDS other API"
		}
	],
    "basePath": "/cds",
	"paths":{
	    "/scoreboard":{
			"get":{
				"tags":["other"],
				"description": "The contest scoreboard",
				"produces": ["application/json"],
				"responses":{
					"200":{ "description": "The scoreboard" }
				}
			}
		},
		"/events":{
			"get":{
				"tags":["other"],
				"description": "The event feed",
				"produces": ["application/xml"],
				"responses":{
					"200":{ "description": "The event feed" }
				}
			}
		},
		"/contest":{
			"get":{
				"tags":["other"],
				"description": "An alternate contest event feed",
				"produces": ["application/xml"],
				"responses":{
					"200":{ "description": "The event feed" }
				}
			}
		},
		"/rss":{
			"get":{
				"tags":["other"],
				"description": "An RSS feed of contest events",
				"produces": ["application/rss"],
				"responses":{
					"200":{ "description": "The feed of contest events" }
				}
			}
		},
		"/images/logo/{id}":{
			"get":{
				"tags":["images"],
				"description": "Return the logo for the given team",
				"parameters":[{
					"name": "id",
					"in": "path",
					"type": "integer",
					"description": "Team id",
					"required": true
				}],
				"produces": ["image/png"],
				"responses":{
					"200":{ "description": "Team logo" },
					"404":{ "description": "Invalid team id or image not found" },
					"503":{ "description": "Service not configured" }
				}
			}
		},
		"/images/team/{id}":{
			"get":{
				"tags":["images"],
				"description": "Return a picture of the given team",
				"parameters":[{
					"name": "id",
					"in": "path",
					"type": "integer",
					"description": "Team id",
					"required": true
				}],
				"produces": ["image/jpeg"],
				"responses":{
					"200":{ "description": "Team logo" },
					"404":{ "description": "Invalid team id or image not found" },
					"503":{ "description": "Service not configured" }
				}
			}
		},
		"/images/overlay/{id}":{
			"get":{
				"tags":["images"],
				"description": "Return a full HD screen overlay for the given team",
				"parameters":[{
					"name": "id",
					"in": "path",
					"type": "integer",
					"description": "Team id",
					"required": true
				}],
				"produces": ["image/png"],
				"responses":{
					"200":{ "description": "Team overlay" },
					"404":{ "description": "Invalid team id or image not found" },
					"503":{ "description": "Service not configured" }
				}
			}
		},
		"/video/screen/{id}":{
			"get":{
				"tags":["video"],
				"description": "Return a video feed from the desktop screen of the given team",
				"parameters":[{
					"name": "id",
					"in": "path",
					"type": "integer",
					"description": "Team id",
					"required": true
				}],
				"produces": ["video/mp2t"],
				"responses":{
					"200":{ "description": "The video stream" },
					"404":{ "description": "Invalid team id or video could not connect" },
					"503":{ "description": "Service not configured" }
				}
			}
		},
		"/video/camera/{id}":{
			"get":{
				"tags":["video"],
				"description": "Return a video feed from the webcam of the given team",
				"parameters":[{
					"name": "id",
					"in": "path",
					"type": "integer",
					"description": "Team id",
					"required": true
				}],
				"produces": ["video/mp2t"],
				"responses":{
					"200":{ "description": "The video stream" },
					"404":{ "description": "Invalid team id or video could not connect" },
					"503":{ "description": "Service not configured" }
				}
			}
		},
		"/video/reaction/{id}":{
			"get":{
				"tags":["video"],
				"description": "Return a reaction video for the given submission id",
				"parameters":[{
					"name": "id",
					"in": "path",
					"type": "integer",
					"description": "Run submission id",
					"required": true
				}],
				"produces": ["video/mp2t"],
				"responses":{
					"200":{ "description": "A reaction video" },
					"404":{ "description": "Invalid submission id or video could not connect" },
					"503":{ "description": "Service not configured"	}
				}
			}
		},
		"/submissionFiles/{id}":{
			"get":{
				"tags":["other"],
				"description": "Returns the submission files for a given submission id",
				"parameters":[{
					"name": "id",
					"in": "path",
					"type": "integer",
					"description": "Run submission id",
					"required": true
				}],
				"produces": ["application/zip"],
				"responses":{
					"200":{ "description": "A zip file containing the submission" },
					"403":{ "description": "User role not authorized" },
					"404":{ "description": "Submission id not valid or not found" }
				}
			}
		},
		"/backups/{id}":{
			"get":{
				"tags":["other"],
				"description": "Returns a backup of the given team's work folder",
				"parameters":[{
					"name": "id",
					"in": "path",
					"type": "integer",
					"description": "Team id",
					"required": true
				}],
				"produces": [
                    "application/zip"
                ],
				"responses":{
					"200":{
						"description": "A zip file backup"
					},
					"403":{
						"description": "User role not authorized"
					},
					"404":{
						"description": "Submission id not valid or not found"
					}
				}
			}
		}
	}
}